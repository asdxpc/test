{"name": "test_get1", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for +: 'int' and 'str'", "trace": "self = <api.department.Department object at 0x00000201893A65F8>\nsteps = [{'method': 'tag.creat', 'params': '${params}'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                if 'assertion' in step.keys():\n                    try:\n>                       assert self.code == step['assertion']\nE                       AssertionError\n\n..\\api\\baseapi.py:69: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_department.TestDepartment object at 0x000002018A050048>\n\n    def test_get1(self):\n        self.department.params['userid'] = 'djkhfjksfhdsjfbrkjb'\n>       self.department.api_steps(self.data)\n\ntest_department.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.department.Department object at 0x00000201893A65F8>\nsteps = [{'method': 'tag.creat', 'params': '${params}'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                if 'assertion' in step.keys():\n                    try:\n                        assert self.code == step['assertion']\n                    except Exception as e:\n>                       Get_log().log_error(self.code + '！=' + step['assertion'])\nE                       TypeError: unsupported operand type(s) for +: 'int' and 'str'\n\n..\\api\\baseapi.py:71: TypeError"}, "attachments": [{"source": "741b8c91-2b6d-49b3-a673-7a20ea39ae4a-attachment.attach"}, {"name": "log", "source": "a6d6f6e8-fa10-45db-8afa-aa075e5c0a40-attachment.txt", "type": "text/plain"}], "start": 1634432809519, "stop": 1634432810316, "uuid": "8bd7e644-ab16-46d2-be4b-f674d08c118a", "historyId": "e45512fa3c6a237e1f42d9675a34ddfe", "testCaseId": "8d194196e5a4562818e15ddd8a417e10", "fullName": "testcase.test_department.TestDepartment#test_get1", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_department"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "PC-202008151337"}, {"name": "thread", "value": "8676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_department"}]}