{"name": "test_get1", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'int'", "trace": "self = <api.department.Department object at 0x000001B6419D7F98>\nsteps = [{'method': 'tag.creat', 'params': '${params}'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                if 'assertion' in step.keys():\n                    try:\n>                       assert self.code == step['assertion']\nE                       AssertionError\n\n..\\api\\baseapi.py:69: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_department.TestDepartment object at 0x000001B642681048>\n\n    def test_get1(self):\n        self.department.params['userid'] = 'djkhf'\n>       self.department.api_steps(self.data)\n\ntest_department.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\baseapi.py:72: in api_steps\n    allure.attach(self.code)\nD:\\python\\lib\\site-packages\\allure_commons\\_allure.py:179: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nd:\\python\\lib\\site-packages\\allure_pytest\\listener.py:220: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\nD:\\python\\lib\\site-packages\\allure_commons\\reporter.py:117: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <allure_commons.logger.AllureFileLogger object at 0x000001B6419AD8D0>\nbody = 60112\nfile_name = 'fb55343f-16b1-4487-9418-ff279e019fd9-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'int'\n\nD:\\python\\lib\\site-packages\\allure_commons\\logger.py:62: TypeError"}, "attachments": [{"source": "efe6acd9-cb37-43a9-9531-45fb9913413b-attachment.attach"}, {"source": "fb55343f-16b1-4487-9418-ff279e019fd9-attachment.attach"}, {"name": "log", "source": "d876a6b1-9c4b-4099-be68-0cda5abf1eb6-attachment.txt", "type": "text/plain"}], "start": 1634436231251, "stop": 1634436232145, "uuid": "2cc289fd-3e1d-4693-a818-4bf648ba11cc", "historyId": "e45512fa3c6a237e1f42d9675a34ddfe", "testCaseId": "8d194196e5a4562818e15ddd8a417e10", "fullName": "testcase.test_department.TestDepartment#test_get1", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_department"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "PC-202008151337"}, {"name": "thread", "value": "9900-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_department"}]}