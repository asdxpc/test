{"name": "test_get[dfmfdsdfdddfsffddf]", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <api.department.Department object at 0x000002C16677E0B8>\nsteps = [{'method': 'tag.get', 'userid': '${userid}'}, {'extract': 'before', 'path': '$..userid'}, {'assertion': 'dfmfdsdfdddfsffddf'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                    print(self.code)\n                    print(type(self.code))\n                    print('111111111111111111111')\n                if 'assertion' in step.keys():\n                    try:\n>                       assert str(self.code)== step['assertion']\nE                       AssertionError\n\n..\\api\\baseapi.py:72: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_department.TestDepartment object at 0x000002C1674166D8>\nuserid = 'dfmfdsdfdddfsffddf'\n\n    @allure.step('测试')\n    @pytest.mark.parametrize('userid',['dfmfdsdfdddfsffddf','djkfhdsjfdss'])\n    def test_get(self,userid):\n        self.department.params['userid'] =userid\n>       self.department.api_steps(self.data)\n\ntest_department.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.department.Department object at 0x000002C16677E0B8>\nsteps = [{'method': 'tag.get', 'userid': '${userid}'}, {'extract': 'before', 'path': '$..userid'}, {'assertion': 'dfmfdsdfdddfsffddf'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                    print(self.code)\n                    print(type(self.code))\n                    print('111111111111111111111')\n                if 'assertion' in step.keys():\n                    try:\n                        assert str(self.code)== step['assertion']\n                    except Exception as e:\n>                       Get_log().log_error(str(self.code) + '！=' + step['assertion'])\nE                       TypeError: can only concatenate str (not \"int\") to str\n\n..\\api\\baseapi.py:74: TypeError"}, "steps": [{"name": "测试", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str\n", "trace": "  File \"D:\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"H:\\练习\\test_reques_wework\\testcase\\test_department.py\", line 16, in test_get\n    self.department.api_steps(self.data)\n  File \"H:\\练习\\test_reques_wework\\api\\baseapi.py\", line 74, in api_steps\n    Get_log().log_error(str(self.code) + '！=' + step['assertion'])\n"}, "attachments": [{"source": "899651b2-99e8-4806-9e30-db3baccfb91d-attachment.attach"}], "parameters": [{"name": "userid", "value": "'dfmfdsdfdddfsffddf'"}], "start": 1634409766989, "stop": 1634409767755}], "attachments": [{"name": "log", "source": "b4ea0411-fdbf-4580-9aaf-4bc925345248-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "userid", "value": "'dfmfdsdfdddfsffddf'"}], "start": 1634409766989, "stop": 1634409767755, "uuid": "4a080553-8821-4497-8fe3-f4b88b2d3f98", "historyId": "a058b37d5c12e354d9b3efef1ea538ee", "testCaseId": "dcccf3236d29225883a842a7b88face6", "fullName": "testcase.test_department.TestDepartment#test_get", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_department"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "PC-202008151337"}, {"name": "thread", "value": "9192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_department"}]}