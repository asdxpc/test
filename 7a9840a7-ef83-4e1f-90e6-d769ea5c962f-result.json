{"name": "test_creat[params0]", "status": "broken", "statusDetails": {"message": "TypeError: unsupported operand type(s) for +: 'int' and 'str'", "trace": "self = <api.department.Department object at 0x000001FDA8FB0080>\nsteps = [{'method': 'tag.creat', 'params': '${params}'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                if 'assertion' in step.keys():\n                    try:\n>                       assert self.code == step['assertion']\nE                       AssertionError\n\n..\\api\\baseapi.py:69: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_department.TestDepartment object at 0x000001FDA9C411D0>\nparams = {'address': '广州市海珠区新港中路', 'alias': 'jackzhang', 'avatar_mediaid': '2-G6nrLmr5EC3MNb_-zL1dDdzkd0p7cNliYu9V5w7o8K0', 'department': [1, 2], ...}\nkwargs = {}\n\n    @pytest.mark.parametrize('params',params)\n    def test_creat(self,params,**kwargs):\n        self.department.params['params'] = params\n>       self.department.api_steps(self.data)\n\ntest_department.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <api.department.Department object at 0x000001FDA8FB0080>\nsteps = [{'method': 'tag.creat', 'params': '${params}'}, {'assertion': 0, 'path': '$..errcode'}]\n\n    def api_steps(self, steps: list):\n        for step in steps:\n            raw = yaml.dump(step)\n            for key, value in self.params.items():\n                raw = raw.replace(f'${{{key}}}', repr(value))\n            step = yaml.safe_load(raw)\n            if isinstance(step, dict):\n                if 'method' in step.keys():\n                    Get_log().log_info('正在测试'+ step['method'])\n                    allure.attach(step['method']+'测试')\n                    method = step['method'].split('.')[-1]\n                    getattr(self, method)(**step)\n                if \"path\" in step.keys():\n                    self.code = getattr(self, 'jsonpath')(**step)\n                if 'assertion' in step.keys():\n                    try:\n                        assert self.code == step['assertion']\n                    except Exception as e:\n>                       Get_log().log_error(self.code + '！=' + step['assertion'])\nE                       TypeError: unsupported operand type(s) for +: 'int' and 'str'\n\n..\\api\\baseapi.py:71: TypeError"}, "attachments": [{"source": "42c9e127-af06-4471-abe2-febc6bd4a5d9-attachment.attach"}, {"name": "log", "source": "c05f389a-0094-4ca8-ae98-2e93aa58ea63-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "params", "value": "{'userid': 'djkhfjksfhdsjfbrkjb', 'name': 'dfgjfdhjghfd', 'alias': 'jackzhang', 'mobile': '+86 13800500000', 'department': [1, 2], 'order': [10, 40], 'position': '产品经理', 'gender': '1', 'email': 'zhangsan@gzdev.com', 'is_leader_in_dept': [1, 0], 'enable': 1, 'avatar_mediaid': '2-G6nrLmr5EC3MNb_-zL1dDdzkd0p7cNliYu9V5w7o8K0', 'telephone': '020-123456', 'address': '广州市海珠区新港中路', 'main_department': 1, 'extattr': {'attrs': [{'type': 0, 'name': '文本名称', 'text': {'value': '文本'}}, {'type': 1, 'name': '网页名称', 'web': {'url': 'http://www.test.com', 'title': '标题'}}]}, 'to_invite': 'true', 'external_position': '高级产品经理', 'external_profile': {'external_corp_name': '企业简称', 'wechat_channels': {'nickname': '视频号名称'}, 'external_attr': [{'type': 0, 'name': '文本名称', 'text': {'value': '文本'}}, {'type': 1, 'name': '网页名称', 'web': {'url': 'http://www.test.com', 'title': '标题'}}, {'type': 2, 'name': '测试app', 'miniprogram': {'appid': 'wx8bd8012614784fake', 'pagepath': '/index', 'title': 'my miniprogram'}}]}}"}], "start": 1634432781760, "stop": 1634432782767, "uuid": "ba494370-fa4e-457b-9810-e21650e13960", "historyId": "ffa21363fa1d2798391de3892c5766b7", "testCaseId": "308d0b0f532cdef2e63bd94db8941ce8", "fullName": "testcase.test_department.TestDepartment#test_creat", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_department"}, {"name": "subSuite", "value": "TestDepartment"}, {"name": "host", "value": "PC-202008151337"}, {"name": "thread", "value": "7572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_department"}]}